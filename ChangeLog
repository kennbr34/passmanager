1st digit = milestone change (Like removing YAXA cipher and implementing all OpenSSL ciphers)
2nd digit = change that renders older version's password files incompatible
3rd digit = functional change which does not render program incompatible with previous version's password files

2022-05-24
(+ver 4.0.5)
        Removed atexit cleanup because it wasn't going to work without globals
        Removed global buffers that were ausing dangling pointers
        Fixed memory leaks while opening database if the file doesn't exist

2022-03-10
(+ver 4.0.4)
        Fixed multiple defititions issue with globals.h after gcc >=10 switched to -fno-common by default

2022-03-08
(+ver 4.0.3)
        Added ability for scrypt to use more than 1 GB of memory
        Added functions to check for sufficient memory for scrypt
        Added OpenSSL version readout on help page

2020-11-27
(+ver 4.0.2)
	Changed source to have modular files instead of one large source file
	Changed source to use as little global variables as possible
	Changed entry matching to rely on regular expressions
	Added ability to pipe entry passwords to standard output when read, added or udpated
2020-10-20
(+Ver 4.0.1)
    Fixed bug where masterKey was not being fully sanitized https://github.com/kennbr34/passmanager/pull/37
2020-03-07
(+ver 4.0.0)
    Changed KDF method from PBKDF2 to scrypt
    Changed the way key for HMAC is derived to be split from a master key that is shared with the cipher key
    Subtituted salt for IV and removed the IV from authentication as associated data
    Improved option handling
    Updated and improved comments
2020-03-02
(+ver 3.4.1)
    Fixed major flaw in IV derivation
    Added prompt to ask if user wants to abort if no permissions to lock memory
    Added prompt to ask if user wants to abort if backup file could not be made
    Changed variable names and code comments
    Changed buffer copying methods
2020-02-17
(+ver 3.3.10)
    Added ability to distinguish between incorrect password or integrity/aunthenticity failure
    Added authentication of associated data (salt,cipher and digest configuration, PBKDF2 iteration amount and IV)
    Improved messages pertaining to integrity/authenticity failure
    Fixed dangling pointers and unitilized variables/arrays
    Fixed memory leaks and unsanitized buffers
    Streamlined error handling and cleanup routines in processing modes
2019-11-03
(+ver 3.2.9)
    Changed strncpy() calls to snprintf() to fix undefined behavior
    Changed input limits and documentation to reflect that
    Added undefined-behavior sanitizer to makefile calls
    Added ability to choose 'primary' or 'clipboard' X selection
    Added ability to specify time to clear password from clipboard in seconds or miliseconds
    Added '-O' option to imply a clear time of 55ms to clear password from clipboard immediately after one paste
    Switched to using xsel instead of xclip instead of native X library calls
    Fixed false-negative when testing if 'xsel' in $PATH and if executable
    Updated documentation and information prompts
    Removed extra cleanUpBuffer calls that would cause double-free errors
2019-10-10
(+ver 3.2.8)
	Wrote function to send password to X11 password with Xlib code instead of piping to xclip binary
	Added option to use xclip binary or integrated Xlib code with ./configure script
	Put database backup routine into a function and made it run only if database MAC was verified
    Added '-I' switch to print information about database
    Fixed conditional tests in updateEntry for use with -C option
    https://github.com/kennbr34/passmanager/pull/29
2019-10-1
(+ver 3.2.7)
	Got rid of libcap capabilities functions because they are not needed
	Replaced ptrace and core-dump disability on Linux with prctl and added it for FreeBSD with procctl
2019-9-30
	Generate new salt for any database modification, 
	Check return status of deriveEVPKey, deriveHMACKey and genEVPSalt
	Fixed double free of encryptedBuffer on MAC failure
	sendToClipboard changed, error checking fclose calls, formatting
2019-9-26
	Fixed error message caused by closing wipeFile in sendToClipboard
	Fixed testing for dbFile existence and passing of name on command line
	Added comments clarifying sendToClipboard function behavior
	Fixed nonsensical opening/closing of dbFile left over from old design
	Fixed memory leaks and updateEntry function 
2019-9-24
	Fixed updateEntry function and chnaged error messages
2019-9-17
(+ver 3.2.6)
	Fixed read mode to not send multiple passes to clipboard if multiple matched
	Fixed all modes to not say password sent to clipboard even if there was a problem
	Fixed error control and messages to inform of line and function where error occurred
	Fixed fread/fwrite error checking to differentiate between a problem with file stream and a short item count
2019-9-14
(+ver 3.2.5)
	Fixed RLIMIT_MEMLOCK to stay unlimited after dropping root privileges
	Added #ifdef to test if OCB mode is designed for backward compatibility
	Set sys_ptrace capability to not effective, not permitted and not inheritable
2019-9-13
(+ver 3.2.4)
	Removed use of temp files so that program operates purely in memory
2019-9-12
(+ver 3.2.3)
	No longer enforce CTR, CFB or OFB mode
	Support CBC, ECB mode
	Warn that OCB and wrap modes are not supported
	Change comparison of MAC to constant time
	Clarify and differentiate MAC error messages
	General tidying of source
		Renamed variables names to better describe purpose and intent
		Made functions to reduce redundant code blocks
			fread/fwrite calls with error checking
			MAC verification
			EVP encryption/decryption
		Removed superfluous comments
	Complete diff comparison: https://github.com/kennbr34/passmanager/compare/3.2.3
2019-8-23
(+ver 3.2.2)
	Fix error where root privileges are not being dropped
2019-8-22
(+ver 3.2.1)
	Added authentication on database file as well as temporary files so that all Associated Data is authenticated
	Changed default PBKDF2 iterations to 1mil
	Added OPENSSL_cleanse routine to clear hmacBuffer after authentication routines since it will now contain the IV
2019-8-21
(+ver 3.1.2)
	Made key iteration amount used for KDF able to be updated and read from file without -i
	Fixed but with deletePass mode that left a blank entry
2019-8-19
(+ver 3.1.1)
	Changed slat size to 256 bits
	Added salt to authenticated Associated Data
2019-8-18
(+ver 3.0)
	Removed cascaded encryption in favor of single encryption.
2019-8-17
(+ver 2.4.2)
	Fixed primeSSL function where initialization of database with -c option gave a false error that the cipher could not be loaded
2019-8-16
(+ver 2.4.1)
	Fixed use of boundless input functions to avoid buffer overflow (strcpy to strncpy, sprint to snprint, etc.)
2019-8-14
(+ver 2.4.0)
	Fixed authenticated encryption to authenticate IV along with encrypted message
	Fixed memory sanitation errors
	Fixed errors parsing ciphers and digests from command line
2019-7-26
(+ver 2.3.2)
	Changed primeSSL function to better test for and enforce use of stream ciphers or CTR, OFB or CFB modes for multiple-encryption safety
2019-7-16
(+ver 2.3.1)
	Changed KDF iteration amount to default to 200k and be user configurable

2019-1-27
(+ver 2.2.2)
	sendToClipBoard also changed to clear sensitive buffers which were copied from the fork() from the main process.
	Clearer error messages used in perror() calls

	https://github.com/kennbr34/passmanager/pull/20
	https://github.com/kennbr34/passmanager/pull/18
	https://github.com/kennbr34/passmanager/pull/15
2019-1-19
(+ver 2.2.1)
	Added #ifdef clauses on libcap, rlimit and memory locking routines so I can compile for BSD
	Fixed data-type mismatches to suppress compiler warnings
2019-1-16
(+ver 2.2.0)
	Changed KDF routines from EVP_BytesToKey to PKCS5_PBKDF2_HMAC
	Added conditional to ensure root privileges are dropped
2019-1-14
(+ver 2.1.4)
	Prevent core dumping
2019-1-13
(+ver 2.1.3)
	Added memory locking to prevent sensitive data from being stored to swap
	Added ability to prohibit scanning with ptrace
2019-1-11
(+ver 2.1.2)
	Updated error handling and memory clearing
	Updated comments
	Changed a few variable names to be more appropriate
2019-1-8
(+ver 2.1.1)
	Cipher mode parameter checking fixed for Slackware and GhostBSD, and improved to accept CFB1 and CFB8
	
	https://github.com/kennbr34/passmanager/pull/10
2019-1-6
(+ver 2.1.0)
	Authentication Composition Changed to Encrypt-then-MAC
	Both ciphers in cascade now select-able
	Parameter checking forces CFB, OFB or CTR modes
	memset functions changed to OPENSSL_cleanse to avoid dead-store elimination
	
	https://github.com/kennbr34/passmanager/pull/8
2019-1-1
(+ver 2.0.0)
	Removed YAXA cipher, and replaced with camellia-256-ofb for 1st algorithm in cascade.
	Added return value checking for fread/fwrite calls
	
	https://github.com/kennbr34/passmanager/pull/2
